<!--
========================================================================
 Copyright (c) 2003 Mort Bay Consulting (Australia) Pty. Ltd.
 $Id: build.xml,v 1.9 2005/03/30 18:20:32 janb Exp $
========================================================================
Build file for tests for JettyPlus
========================================================================

The default target is "test", which will build all tests and run them.

Other targets:

  clean         - Remove all generated files.
  prepare       - Set up build directory structure.

!!NOTE: To run these tests you must have previously downloaded and installed 
the Ant optional tasks from:

   http://jakarta.apache.org/ant
-->

<project name="JettyPlus Tests" default="test" basedir=".">


  <!-- ==================================================================== -->
  <property name="build.compiler"            value="modern" />
  <property name="build.compiler.emacs"      value="true" />
  <property name="build.compiler.fulldepend" value="false" />
  <property name="build.compiler.pedantic"   value="false" />
  <property name="javac.debug"               value="on" />
  <property name="javac.optimize"            value="off" />
  <property name="javac.deprecation"         value="off" />

  <!-- ==================================================================== -->
  <property environment="env"/>
  <property name="extra"          value="${basedir}/../.."/>
  <property name="plus"           value="${basedir}/.."/>
  <property name="src"            value="${plus}/src" />
  <property name="etc"            value="${extra}/etc" />
  <property name="lib"            value="${extra}/lib"/>
  <property name="ext"            value="${extra}/ext"/>
  <property name="resources"      value="${extra}/resources"/>
  <property name="classes"        value="${plus}/classes"/>
  <property name="logs"           value="${extra}/logs"/>
  <property name="test"           value="${plus}/test"/>
  <property name="test.src"       value="${test}/src"/>
  <property name="test.classes"   value="${test}/classes"/>
  <property name="test.results"   value="${test}/results"/>
  <property name="jetty.home"     value="${basedir}/../../.." />
  <property name="jetty.lib"      value="${jetty.home}/lib" />
  <property name="jetty.ext"      value="${jetty.home}/ext" />
  <property name="jetty.jar"      value="${jetty.lib}/org.mortbay.jetty.jar"/>
  <property name="servlet.jar"    value="${jetty.lib}/javax.servlet.jar"/>
  

  <!-- ==================================================================== -->
  <!-- classpath                                                            -->
  <!-- ==================================================================== -->
  <target name="classpath" description="set up the classpath">
    <path id="extpath">
      <fileset dir="${ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
      <fileset dir="${lib}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
      </fileset>
      <fileset dir="${jetty.lib}">
        <include name="org.mortbay.jetty.jar"/>
        <include name="javax.servlet.jar"/>
      </fileset>
      <fileset dir="${jetty.ext}">
        <include name="*.jar"/>
        <include name="*.JAR"/>
        <include name="*.zip"/>
        <include name="*.ZIP"/>
       </fileset>
    </path>

    <path id="classpath">
      <pathelement path="${classes}" />
      <pathelement path="${resources}"/>
      <path refid="extpath" />
    </path>

    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>

  </target>

  

  <!-- ==================================================================== -->
  <!-- prepare                                                              -->
  <!-- ==================================================================== -->
  <target name="prepare" depends="classpath" description="Prepare build dir structure">
    <mkdir dir="${test.classes}" />
    <mkdir dir="${test.results}" />
    <available property="junit.task.available" 
               classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" />
    <available property="junit.available" 
               classname="junit.framework.Test" />
  </target>

  <!-- ==================================================================== -->
  <!-- tidy                                                                 -->
  <!-- ==================================================================== -->
  <target name="tidy" description="remove compiled classes">
    <delete dir="${test.classes}" quiet="true"/>
  </target>

  <!-- ==================================================================== -->
  <!-- clean                                                                -->
  <!-- ==================================================================== -->
  <target name="clean" depends="tidy" description="clean up">
    <delete dir="${test.results}" quiet="true"/>
  </target>

  <!-- ==================================================================== -->
  <!-- classes                                                              -->
  <!-- ==================================================================== -->
  <target name="classes" depends="prepare" description="compile test classes">
    <javac srcdir="${test.src}"
           destdir="${test.classes}"
           debug="true"
           optimize="fale"
           deprecation="${javac.deprecation}" >
       <classpath>
         <path refid="classpath" />
         <pathelement path="${junit.jar}" />     
       </classpath>
       <include name="**/*.java"/>
    </javac>
  </target>



  <!-- ==================================================================== -->
  <!-- junit                                                                -->
  <!-- ==================================================================== -->
  <target name="junit" depends="prepare,check.junit.task,check.junit,classes">
    <echo>
Test results in ${test.results}
    </echo>
    <delete file="${test.results}/*" quiet="true" />
    <junit fork="no" printsummary="yes" haltonerror="yes" haltonfailure="yes" >
      <formatter type="plain" usefile="true" />                  
      <classpath> 
         <path refid="classpath" />
         <pathelement location="${junit.jar}" />     
         <pathelement location="${test.classes}" />     
      </classpath>        
      <batchtest fork="no" todir="${test.results}">
        <fileset dir="${test.src}">
          <include name="**/Tests.java" />
        </fileset>
      </batchtest>   
    </junit>
  </target>




  <!-- ==================================================================== -->
  <!-- test                                                                 -->
  <!-- ==================================================================== -->
  <target name="test" depends="junit, testJAAS, testJNDI"/>




  <!-- ==================================================================== -->
  <!-- testJNDI                                                           -->
  <!-- ==================================================================== -->
  <target name="testJNDI" depends="prepare, check.junit.task, check.junit, classes">   
   <junit fork="no" printsummary="yes" haltonerror="yes" haltonfailure="yes" >
      <jvmarg value="-DDEBUG"/>
      <jvmarg value="-Djetty.home=${jetty.home}"/>
      <formatter type="plain" usefile="true" />                  
      <classpath> 
         <path refid="classpath" />
         <pathelement location="${test.classes}" />     
         <pathelement location="${junit.jar}" />     
      </classpath>        
      <batchtest fork="yes" todir="${test.results}">
        <fileset dir="${test.src}">
          <include name="**/TestJNDI*.java" />
        </fileset>
      </batchtest>   
    </junit>
  </target>



  <!-- ==================================================================== -->
  <!-- testJAAS                                                             -->
  <!-- ==================================================================== -->
  <target name="testJAAS" depends="prepare, check.junit.task, check.junit, check.jdbc, classes, secure" />

  <target name="check.jdbc">
    <condition property="jdbc.override">
        <and>
          <isset property="dbUrl"/>
          <isset property="dbUserName"/>
          <isset property="dbPassword"/>
          <isset property="dbDriver"/>
        </and>
    </condition>
  </target>

  <target name="jdbc-prep" unless="jdbc.override">
    <property name="dbUserName" value="sa"/>
    <property name="dbPassword" value=""/>
    <property name="dbUrl" value="jdbc:hsqldb:."/>
    <property name="dbDriver" value="org.hsqldb.jdbcDriver"/>
  </target>


  <target name="secure" depends="jdbc-prep">
    <echo message="Doing JAAS test with policy file"/>
    <echo>
	Test results in ${test.results}
    </echo>
    <echo>
        dbUserName=${dbUserName}, dbPassword=${dbPassword}, dbUrl=${dbUrl}, dbDriver=${dbDriver}
    </echo>
    <junit fork="yes" printsummary="yes" haltonerror="yes" haltonfailure="yes" >
      <jvmarg value="-DdbUrl=${dbUrl}"/>
      <jvmarg value="-DdbUserName=${dbUserName}"/>
      <jvmarg value="-DdbPassword=${dbPassword}"/>
      <jvmarg value="-DdbDriver=${dbDriver}"/>
      <jvmarg value="-Dtest=${test}"/>
      <jvmarg value="-Djava.security.manager"/>
      <jvmarg value="-Djava.security.policy=${test}/src/org/mortbay/jaas/test.policy"/>
      <jvmarg value="-DDEBUG"/>
      <formatter type="plain" usefile="true" />                  
      <classpath> 
         <path refid="classpath" />
         <pathelement location="${test.classes}" />     
         <pathelement location="${junit.jar}" />     
      </classpath>        
      <batchtest fork="yes" todir="${test.results}">
        <fileset dir="${test.src}">
          <include name="**/TestJAAS*.java" />
        </fileset>
      </batchtest>   
    </junit>
  </target>




  <!-- ==================================================================== -->
  <!-- check.junit.task                                                     -->
  <!-- ==================================================================== -->
  <target name="check.junit.task" unless="junit.task.available" description="Check if junit available">
    <fail message="
 The &lt;junit&gt; task is not available.
 You need to install the Ant optional tasks .jar in the [ant]/lib directory.
 Please see [jetty]/tests/README.html for more information"
   />
  </target>



  <!-- ==================================================================== -->
  <!-- check.junit                                                          -->
  <!-- ==================================================================== -->
  <target name="check.junit" unless="junit.available"  description="Check if junit available">
    <fail message="
  The junit .jar is not in the Ant class path.
  You need to place a copy junit.jar in the [ant]/lib directoy.
  Please see [jetty]/tests/README.html for more information" 
    />
  </target>

</project>

